// Component:       Grid
// Description:     Provides a responsive, fluid and nestable grid system
//
// Blocks:          `row`
//                  `col__xs-*'
//                  `col__sm-*'
//                  `col__md-*`
//                  `col__lg-*`
//
// Modifiers:       `col__xs--offset-*'
//                  `col__sm--offset-*'
//                  `col__md--offset-*`
//                  `col__lg--offset-*`
//
// Markup:
//
// <!-- grid -->
// <div class="row">
//     <div class="col__xs-*"></div>
//     <div class="col__sm-* col__sm--offset-*"></div>
// </div>
//
// ========================================================================

// Columns generator
.make-columns(@quantity: @grid-columns; @suffix: ~""; @i: 1;) when (@i <= @quantity) {
	
	.col@{suffix}-@{i} { width: percentage(( @i / @quantity )); }

	.make-columns(@quantity; @suffix; @i+1);

}

// Offset generator
.make-offset(@quantity: @grid-columns; @suffix: ~""; @i: 1;) when (@i < @quantity) {
	
	.col@{suffix}--offset-@{i} { margin-left: percentage(( @i / @quantity )); }

	.make-offset(@quantity; @suffix; @i+1);

}

/* ====================================
   GRID
   ==================================== */
.row {
	width: 100%;
	*zoom: 1;
	.clearfix;
}

// Basic styles for collumns
[class*="col"] {
	min-height: @font-line-height;
	float: left;
	width: 100%;
	display: block;
	margin: 0;
	.clearfix;

	&.padding, .inner {padding: 0 10px;}
}

// Style reset for offset
[class*=offset] {
	width: auto;
	float: none;
}

.make-columns(@suffix: ~"__xs");
.make-offset(@suffix: ~"__xs");

@media (min-width: @screen-sm) {
	.make-columns(@suffix: ~"__sm");
	.make-offset(@suffix: ~"__sm");
}

@media (min-width: @screen-md) {
	.make-columns(@suffix: ~"__md");
	.make-offset(@suffix: ~"__md");
}

@media (min-width: @screen-lg) {
	.make-columns(@suffix: ~"__lg");
	.make-offset(@suffix: ~"__lg");
}
