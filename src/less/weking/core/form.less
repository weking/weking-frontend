// Component:       Form
// Description:     Define styles for forms, form elements and buttons
//
// Blocks:          'form'
//
// Elements:        'form_control'
//
// Modifiers:       'form-stacked'
//                  'form-aligned'
//                  'form_control-disabled'
//                  'form_control-xs'
//                  'form_control-sm'
//                  'form_control-lg'
//                  'form_control-xl'
//                  'form_control-raised'
//
// Markup:
//
// <!-- FORM -->
// <form class="form" action="#">
//   <legend>A compact inline form</legend>
//   <input class="form_control" type="text" placeholder="Username">
//   <input class="form_control" type="password" placeholder="Password">
// </form>
//
// ========================================================================

// Styles shared between `<input>`, `<select>`, `<textarea>` & buttons
.form_control,
.btn {
  display: block;
  font-size: 14px;
  height: @font-line-height*1.5;
  padding: 0;
  margin-top: @font-line-height/4;
  margin-bottom: @font-line-height/4;
  line-height: normal;
  font-family: @font-family;
  vertical-align: top;
  color: @input-text-color;
  text-decoration: none;
  .animate(~"background, border-color, color, box-shadow");

  &:focus {
    outline: 0;
  }

  // Firefox:  Get rid of the inner focus border

  &::-moz-focus-inner {
    padding: 0;
    border: 0;
  }

  // Disabled & Read-only

  &[disabled],
  &[class*=disabled],
  &[readonly] {
    cursor: not-allowed;
    background: darken(@white, 10%);
    color: lighten(@input-text-color, 35%);
    border-color: transparent !important;
  }

  &[disabled],
  &[class*=disabled] {
    .lh-opacity(~"0.4");
  }

  // SIZES

  // Extra Small
  &[class*=xs] {
    font-size: 10px;
    height: @font-line-height;
    margin-top: @font-line-height/2;
    margin-bottom: @font-line-height/2;
  }

  // Small
  &[class*=sm] {
    font-size: 12px;
    height: @font-line-height*1.25;
    margin-top: @font-line-height*0.75/2;
    margin-bottom: @font-line-height*0.75/2;
  }

  // Large
  &[class*=lg] {
    font-size: 18px;
    height: @font-line-height*2;
    margin-top: @font-line-height/2;
    margin-bottom: @font-line-height/2;
  }

  // Extra Large
  &[class*=xl] {
    font-size: 24px;
    height: @font-line-height*2.5;
    margin-top: @font-line-height/4;
    margin-bottom: @font-line-height/4;
  }
}

// Styles for `<input>`, `<select>`, `<textarea>`
.form_control {
  background: transparent;
  border: 0 none;
  border-bottom: 1px solid @input-color;

  &:hover,
  &:focus {
    border-bottom: 2px solid @input-focus-color;

    &:invalid {
      color: @input-error-color;
      border-color: lighten(@input-error-color, 15%);

      &:focus {
        border-color: lighten(@input-error-color, 18%);
      }
    }
  }

  // Raised input
  &[class*=raised] {
    background: @white;
    border: 2px solid transparent;
    padding: 0 @font-line-height/2;
    .lh-border-radius(@input-radius);
    .z-depth-1();

    &:hover,
    &:focus {
      border: 2px solid darken(@white, 30%);
    }

    &:focus {
      border-color: @input-focus-color;
    }

    // Rounded corners
    &[class*=radius] {
      .lh-border-radius(99px);
    }
  }
}

input[type="file"],
input[type="radio"],
input[type="checkbox"] {
  &:focus {
    outline: 1px auto @input-focus-color;
  }

  &:focus:invalid:focus {
    outline-color: lighten(@input-error-color, 18%);
  }
}

// Form Block
.form {
  label {
    font-size: 14px;
    vertical-align: top;
  }

  legend {
    display: block;
    width: 100%;
    padding-bottom: @font-line-height/2-1;
    margin-bottom: @font-line-height/2;
    font-size: @font-size*1.15;
    font-weight: 700;
    color: @grey900;
    border-bottom: 1px solid darken(@grey, 5%);
  }

  input[type="checkbox"],
  input[type="radio"] {
    display: inline;
    height: auto;
    margin: 0;
    vertical-align: inherit !important;
    .lh-box-shadow(~"none");
  }

  &[class*=stacked] {
    .form_control,
    label,
    .btn {
      display: block;
    }
  }

  &[class*=aligned] {
    label {
      text-align: left;
    }
  }
}

textarea {
  width: 100%;
  max-width: 100%;
  min-width: 100%;
  min-height: @font-line-height * 3.5;
}

// Media Queries
@media (min-width: @screen-sm) {
  .form_control,
  .btn {
    display: inline-block;
  }

  .form[class*=aligned] {
    label {
      text-align: right;
      padding-right: @font-line-height;
    }
  }
}

@media (min-width: @screen-md) {
  select[multiple] {
    height: @font-line-height*4;
    margin-top: 0;
    margin-bottom: @font-line-height;
    width: 100%;
  }
}

// Component:       Button
// Description:     Define styles for buttons
//
// Blocks:          'btn'
//
// Modifiers:       'btn-disabled'
//                  'btn-xs'
//                  'btn-sm'
//                  'btn-lg'
//                  'btn-xl'
//                  'btn-flat'
//                  'btn-ghost'
//
// Markup: <button type="submit" class="btn btn-primary-xl">Sign in</button>
//
// ========================================================================
.btn {
  padding: 0 @grid-baseline*2;
  line-height: @font-line-height*1.5;
  text-transform: uppercase;
  text-align: center;
  cursor: pointer;
  border: 2px solid transparent;
  font-weight: bolder;
  .lh-border-radius(@input-radius);
  .z-depth-1();

  // Pressed state
  &:active,
  &[class*=active],
  &:focus {
    .z-depth-2();
  }

  // Rounded corners
  &[class*=radius] {
    .lh-border-radius(99px);
  }

  // Sizes
  &[class*=xs] {
    line-height: @font-line-height;
  }

  &[class*=sm] {
    line-height: @font-line-height*1.25;
  }

  &[class*=lg] {
    line-height: @font-line-height*2;
  }

  &[class*=xl] {
    line-height: @font-line-height*2.5;
  }


  // Colors
  &[class*=default] {
    .btn-gen('grey', @grey900, 200);
  }

  &[class*=primary] {
    .btn-gen('primary', @white);
  }

  &[class*=secondary] {
    .btn-gen('secondary', @white);
  }

  &[class*=blue] {
    .btn-gen('blue', @white);
  }

  &[class*=green] {
    .btn-gen('green', @white);
  }

  &[class*=red] {
    .btn-gen('red', @white);
  }

  &[class*=orange] {
    .btn-gen('orange', @white);
  }

  &[class*=black] {
    .btn-gen('grey', @white, 800);
  }

  // Ghost button (without background)
  &[class*=ghost] {
    &:not(:hover) {
      background: transparent;

      &[class*=default] {
        color: @grey;
      }

      &[class*=primary] {
        color: @primary;
      }

      &[class*=secondary] {
        color: @secondary;
      }

      &[class*=blue] {
        color: @blue;
      }

      &[class*=green] {
        color: @green;
      }

      &[class*=red] {
        color: @red;
      }

      &[class*=orange] {
        color: @orange;
      }

      &[class*=black] {
        color: @grey900;
      }
    }
  }

  // Remove shadow for Flat button
  &[class*=flat] {
    .z-depth-0() !important;
    color: @input-text-color;
    background: transparent;
    border-color: transparent;
  }
}
